{
  "curs": {
    "nom": "Python",
    "descripcio": "Domina Python per a l'anàlisi de dades, des de programació bàsica fins a models de Machine Learning aplicats.",
    "color_fons": "#F4F8F4"
  },
  "capitol": {
    "titol": "Funcions i paràmetres",
    "numero": 4,
    "dificultat": "Mitjà",
    "preu": 0.0
  },
  "exercicis": [
    {
      "numero": 1,
      "titol": "Definir una funció bàsica",
      "tipus": "exe",
      "descripcio": "Les funcions són eines fonamentals en programació. Permeten reutilitzar codi i estructurar els programes de manera més clara. Per definir una funció, utilitzem la paraula clau def seguida del nom de la funció i les seves variables entre parèntesis. Per exemple, una funció que imprimeixi 'Hola, món!' podria ser definida així: def saluda(): print('Hola, món!').",
      "enunciat": "Defina una funció anomenada 'somia' que imprimeixi 'Estic somiant'.",
      "solucio": "def somia(): print('Estic somiant')",
      "solucio_codi_1": "def somia():\n    print('Estic somiant')",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 2,
      "respostes_test": [],
      "pista_1": "Utilitzeu la paraula clau def per començar.",
      "pista_2": "No oblideu les dues ratlles de codi: definició i imprès.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 2,
      "titol": "Paràmetres i valors per defecte",
      "tipus": "exe",
      "descripcio": "Les funcions poden acceptar paràmetres, que permeten personalitzar el comportament de la funció. Els paràmetres es poden assignar valors per defecte, de manera que si no se'ls proporciona un valor, la funció utilitzarà el valor per defecte. Per exemple, una funció que saluda a algú amb un missatge per defecte podria ser definida així: def saluda(nom = 'món'): print(f'Hola, {nom}!').",
      "enunciat": "Defina una funció anomenada 'desitja' que, per defecte, desitgi 'bones festes', però que també accepti un altre missatge.",
      "solucio": "def desitja(missatge = 'bones festes'): print(f'Us desitjo {missatge}')",
      "solucio_codi_1": "def desitja(missatge = 'bones festes'):\n    print(f'Us desitjo {missatge}')",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 3,
      "respostes_test": [],
      "pista_1": "Definíu la funció amb un paràmetre que tingui un valor per defecte.",
      "pista_2": "Utilitzeu una cadena f per incloure el valor del paràmetre en el missatge.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 3,
      "titol": "Test: Retornar valors",
      "tipus": "test",
      "descripcio": "Les funcions poden retornar valors mitjançant la instrucció return. Per exemple, una funció que calculi el quadrat d'un nombre podria ser definida així: def quadrat(x): return x * x.",
      "enunciat": "Què fa la funció return en una funció Python?",
      "solucio": "Retorna un valor",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "temps_estimat_minuts": 1,
      "respostes_test": [
        "Finalitza la funció i retorna un valor",
        "Repeteix la funció",
        "Obrir un nou document",
        "Tancar el programa"
      ],
      "pista_1": "La funció return és crucial per obtenir resultats de les funcions.",
      "pista_2": "Recorda les funcions bàsiques que has après fins ara.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 4,
      "titol": "Funcions lambda",
      "tipus": "exe",
      "descripcio": "Les funcions lambda són funcions anònimes que poden ser definides en una sola línia de codi. Són útils quan es necessita una funció simple que no cal reutilitzar. Per exemple, una funció lambda que calculi el triple d'un nombre podria ser definida així: lambda x: x * 3.",
      "enunciat": "Defina una funció lambda que calculi el doble d'un nombre.",
      "solucio": "lambda x: x * 2",
      "solucio_codi_1": "dobler = lambda x: x * 2",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 2,
      "respostes_test": [],
      "pista_1": "Recorda la sintaxi bàsica de les funcions lambda.",
      "pista_2": "El paràmetre és 'x', i el càlcul és multiplicar 'x' per 2.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 5,
      "titol": "Exercici d'aplicació: Funcions amb paràmetres i retourneu valors",
      "tipus": "IA",
      "descripcio": "Una empresa voldria un programa que calculés el preu final d'un article en funció del seu preu inicial i d'un impost del 21%. Disposeu d'una funció anomenada 'calcula_impost' que ha de prendre el preu inicial i retornar el preu final amb l'impost aplicat. A banda, també cal calcular el preu sense impost i retornar aquests dos valors. Podeu considerar que l'impost és sempre del 21%.",
      "enunciat": "Definiu una funció 'calcula_impost' que accepti un preu inicial i retorni una tupla amb el preu sense impost i el preu final amb impost.",
      "solucio": "def calcula_impost(preu_inicial):\n    preu_sense_impost = preu_inicial / 1.21\n    preu_final = preu_inicial\n    return preu_sense_impost, preu_final",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Defineix la funció amb el nom especificat i el paràmetre del preu inicial.",
      "pista_2": "Calculeu el preu sense impost, considerant que l'impost és del 21% i aplicant la fórmula adequada.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    }
  ]
}