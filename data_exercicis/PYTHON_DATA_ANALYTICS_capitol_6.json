{
  "curs": {
    "nom": "Data Analytics",
    "subnom":"Python",
    "descripcio": "Domina Python per a l'anàlisi de dades, des de programació bàsica fins a models de Machine Learning aplicats.",
    "color_fons": "#F4F8F4"
  },
  "capitol": {
    "titol": "Pandas II: Transformació i agrupació de dades",
    "numero": 6,
    "dificultat": "Mitjà",
    "preu": 0.0
  },
  "exercicis": [
    {
      "numero": 1,
      "titol": "Agrupar dades amb groupby",
      "tipus": "codi",
      "descripcio": "En aquest exercici, aprendràs a utilitzar la funció groupby per agrupar dades en un DataFrame de Pandas. La funció groupby permet dividir les dades en subconjunts segons una o més columnes i aplicar-hi funcions. Per exemple, si tens un conjunt de dades sobre vendes amb les columnes 'ciutat' i 'venda', pots utilitzar groupby per calcular la suma de vendes per ciutat. Primer, importarem les llibreries necessàries i crearem un DataFrame amb dades deexemple. Llavors, utilitzarem la funció groupby per agrupar les dades per 'ciutat' i calcular la suma de 'venda' per a cada grup.",
      "enunciat": "Crea un DataFrame amb les columnes 'ciutat' i 'venda' i calcula la suma de vendes per ciutat utilitzant groupby.",
      "solucio": "DataFrame amb la suma de vendes per ciutat",
      "solucio_codi_1": "import pandas as pd\n\ndata = {'ciutat': ['Barcelona', 'Madrid', 'Barcelona', 'Madrid'], 'venda': [100, 200, 150, 250]}\ndf = pd.DataFrame(data)\nresultat = df.groupby('ciutat')['venda'].sum()\nprint(resultat)",
      "solucio_codi_2": null,
      "codi_a_completar": null,
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Importa les llibreries necessàries",
      "pista_2": "Crea el DataFrame amb les dades",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 2,
      "titol": "Tractament de valors nuls",
      "tipus": "completar_codi",
      "descripcio": "En aquest exercici, aprendràs a tractar valors nuls en un DataFrame de Pandas. Els valors nuls es poden produir quan no hi ha dades disponibles per a una determinada fila o columna. Per exemple, si tens un conjunt de dades sobre alumnes amb les columnes 'nom' i 'edat', pots tenir valors nuls en la columna 'edat' si no se sap l'edat d'un alumne. La funció isnull() permet detectar valors nuls. Primer, importarem les llibreries necessàries i crearem un DataFrame amb dades d'exemple. Llavors, utilitzarem la funció isnull() per detectar els valors nuls.",
      "enunciat": "Detecta els valors nuls en el següent DataFrame i ompli'ls amb la mitjana de la columna 'edat':",
      "solucio": "DataFrame sense valors nuls",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "codi_a_completar": "import pandas as pd\n\ndata = {'nom': ['Pere', 'Maria', 'Joan'], 'edat': [20, None, 30]}\ndf = pd.DataFrame(data)\n# <placeholder> per omplir els valors nuls",
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Importa les llibreries necessàries",
      "pista_2": "Crea el DataFrame amb les dades",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 3,
      "titol": "Aplicar funcions: apply()",
      "tipus": "codi",
      "descripcio": "En aquest exercici, aprendràs a utilitzar la funció apply() per aplicar una funció a cada fila o columna d'un DataFrame de Pandas. La funció apply() permet aplicar qualsevol funció, sigui una funció definida per l'usuari o una funció integrada de Python. Per exemple, si tens un conjunt de dades sobre vendes amb les columnes 'quantitat' i 'preu', pots utilitzar apply() per calcular el total de cada venda. Primer, importarem les llibreries necessàries i crearem un DataFrame amb dades d'exemple. Llavors, definirem una funció que calcula el total de cada venda i l'aplicarem a cada fila del DataFrame.",
      "enunciat": "Crea un DataFrame amb les columnes 'quantitat' i 'preu' i calcula el total de cada venda utilitzant apply().",
      "solucio": "DataFrame amb el total de cada venda",
      "solucio_codi_1": "import pandas as pd\n\ndata = {'quantitat': [2, 3, 4], 'preu': [10, 20, 30]}\ndf = pd.DataFrame(data)\ndef calcular_total(row):\n    return row['quantitat'] * row['preu']\ndf['total'] = df.apply(calcar_total, axis=1)\nprint(df)",
      "solucio_codi_2": null,
      "codi_a_completar": null,
      "temps_estimat_minuts": 15,
      "respostes_test": [],
      "pista_1": "Importa les llibreries necessàries",
      "pista_2": "Crea el DataFrame amb les dades",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 4,
      "titol": "Merge i Join entre taules",
      "tipus": "completar_codi",
      "descripcio": "En aquest exercici, aprendràs a fer Merge i Join entre dues taules de Pandas. El Merge i el Join són operacions que permeten combinar dues taules en una de nova, basant-se en una columna comuna. Per exemple, si tens dues taules, una amb les columnes 'id' i 'nom' i una altra amb les columnes 'id' i 'edat', pots utilitzar Merge o Join per combinar-les en una taula amb les columnes 'id', 'nom' i 'edat'. Primer, importarem les llibreries necessàries i crearem dues taules amb dades d'exemple. Llavors, utilitzarem Merge o Join per combinar-les.",
      "enunciat": "Combina les següents dues taules utilitzant Merge:",
      "solucio": "Taula resultant de la combinació",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "codi_a_completar": "import pandas as pd\n\ndata1 = {'id': [1, 2, 3], 'nom': ['Pere', 'Maria', 'Joan']}\ndata2 = {'id': [1, 2, 3], 'edat': [20, 25, 30]}\ntable1 = pd.DataFrame(data1)\ntable2 = pd.DataFrame(data2)\n# <placeholder> per fer el Merge",
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Importa les llibreries necessàries",
      "pista_2": "Crea les dues taules amb les dades",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 5,
      "titol": "Tractament de valors duplicats",
      "tipus": "test",
      "descripcio": "En aquest exercici, aprendràs a tractar valors duplicats en un DataFrame de Pandas. Els valors duplicats es produeixen quan hi ha filas que contenen exactament les mateixes dades. La funció drop_duplicates() permet eliminar les filas duplicades. Per exemple, si tens un conjunt de dades sobre alumnes amb les columnes 'nom' i 'edat', pots tenir filas duplicades si dos alumnes tenen el mateix nom i edat. Primer, importarem les llibreries necessàries i crearem un DataFrame amb dades d'exemple. Llavors, utilitzarem la funció drop_duplicates() per eliminar les filas duplicades.",
      "enunciat": "Quina funció de Pandas s'utilitza per eliminar les filas duplicades d'un DataFrame?",
      "solucio": "drop_duplicates()",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "codi_a_completar": null,
      "temps_estimat_minuts": 5,
      "respostes_test": [
        {
          "opcio": "A",
          "text": "drop_duplicates()"
        },
        {
          "opcio": "B",
          "text": "isnull()"
        },
        {
          "opcio": "C",
          "text": "groupby()"
        },
        {
          "opcio": "D",
          "text": "apply()"
        }
      ],
      "pista_1": "Importa les llibreries necessàries",
      "pista_2": "Crea el DataFrame amb les dades",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    }
  ]
}