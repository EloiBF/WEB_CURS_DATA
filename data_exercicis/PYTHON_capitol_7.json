{
  "curs": {
    "nom": "PYTHON",
    "descripcio": "Domina Python per a l'anàlisi de dades, des de programació bàsica fins a models de Machine Learning aplicats.",
    "color_fons": "#F4F8F4"
  },
  "capitol": {
    "titol": "Manipulació de dades amb Pandas",
    "numero": 7,
    "dificultat": "Mitjà",
    "preu": 0.0
  },
  "exercicis": [
    {
      "numero": 1,
      "titol": "Agrupacions amb groupby",
      "tipus": "exe",
      "descripcio": "Les agrupacions amb groupby són una forma potent de processar dades en Pandas. La funció groupby permet agrupar les dades en funció d'una columna o columna i aplicar operacions a cada grup. Per exemple, si tenim un dataframe amb les vendes d'un producte per dia i vollem calcular la suma de les vendes per setmana, podem utilitzar la funció groupby per agrupar les dades per setmana i calcular la suma. Primer, crearem un dataframe amb les vendes i, després, utilitzarem groupby per agrupar les dades.",
      "enunciat": "Crea un dataframe amb les vendes d'un producte per dia durant una setmana i calcula la suma de les vendes per dia.",
      "solucio": "Resposta: 20, 25, 30, 22, 28, 32, 35",
      "solucio_codi_1": "import pandas as pd\nvendes = pd.DataFrame({'Dia': ['Dilluns', 'Dimarts', 'Dimecres', 'Dijous', 'Divendres', 'Dissabte', 'Diumenge'], 'Vendes': [20, 25, 30, 22, 28, 32, 35]})\nvendes_per_dia = vendes.groupby('Dia')['Vendes'].sum()",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Crea un dataframe amb les vendes diàries.",
      "pista_2": "Utilitza la funció groupby per agrupar les dades per dia.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 2,
      "titol": "Merge i Join de taules",
      "tipus": "exe",
      "descripcio": "El Merge i el Join són operacions bàsiques en l'anàlisi de dades que permeten combinar dades de diferents taules en una sola. En Pandas, podem utilitzar les funcions merge i join per combinar les dades. Per exemple, si tenim dues taules, una amb les vendes i l'altra amb els preus dels productes, podem utilitzar el Merge per combinar les dades i obtenir el preu final de cada venda.",
      "enunciat": "Combina dues taules, una amb les vendes i l'altra amb els preus dels productes, per obtenir el preu final de cada venda.",
      "solucio": "Resposta: una taula amb les vendes i els preus dels productes",
      "solucio_codi_1": "import pandas as pd\nvendes = pd.DataFrame({'Producte': ['A', 'B', 'C'], 'Quantitat': [10, 20, 30]})\npreus = pd.DataFrame({'Producte': ['A', 'B', 'C'], 'Preu': [5, 10, 15]})\nvendes_completes = pd.merge(vendes, preus, on='Producte')",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Crea dues taules, una amb les vendes i l'altra amb els preus dels productes.",
      "pista_2": "Utilitza la funció merge per combinar les dades.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 3,
      "titol": "Tractar valors nuls",
      "tipus": "test",
      "descripcio": "Els valors nuls són molt comuns en l'anàlisi de dades i podem tractar-los de diferents maneres. En Pandas, podem utilitzar les funcions isnull i notnull per detectar valors nuls i no nuls. Per exemple, si tenim una taula amb les vendes i alguns valors són nuls, podem utilitzar la funció isnull per detectar-los i substituir-los per un valor determinat.",
      "enunciat": "Quina funció es pot utilitzar per detectar valors nuls en un dataframe?",
      "solucio": "isnull",
      "solucio_codi_1": null,
      "solucio_codi_2": null,
      "temps_estimat_minuts": 5,
      "respostes_test": [
        "isnull",
        "notnull",
        "dropna",
        "fillna"
      ],
      "pista_1": "Utilitza una funció que permeti detectar valors nuls.",
      "pista_2": "La funció ha de ser una cadena.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 4,
      "titol": "Aplicar funcions (apply, map)",
      "tipus": "exe",
      "descripcio": "Les funcions apply i map són molt útils en l'anàlisi de dades per aplicar operacions a cada element d'un dataframe. Per exemple, si tenim una taula amb les vendes i volem calcular el impost del 10% sobre cada venda, podem utilitzar la funció apply per aplicar l'impost a cada venda.",
      "enunciat": "Aplica un impost del 10% sobre cada venda d'un dataframe.",
      "solucio": "Resposta: un dataframe amb les vendes i l'impost aplicat",
      "solucio_codi_1": "import pandas as pd\nvendes = pd.DataFrame({'Venda': [100, 200, 300]})\ndef impost(x):\n  return x * 0.10\nvendes['Impost'] = vendes['Venda'].apply(impost)",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 10,
      "respostes_test": [],
      "pista_1": "Crea un dataframe amb les vendes.",
      "pista_2": "Defineix una funció que calculi l'impost del 10%.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    },
    {
      "numero": 5,
      "titol": "Entrenar un model de Machine Learning",
      "tipus": "IA",
      "descripcio": "Els models de Machine Learning són molt útils en l'anàlisi de dades per predir resultats futurs. Per exemple, si tenim una taula amb les vendes i els preus dels productes, podem utilitzar un model de regressió lineal per predir les vendes futures en funció del preu del producte. Primer, crearem un dataframe amb les vendes i els preus dels productes i, després, utilitzarem una biblioteca de Machine Learning per entrenar el model.",
      "enunciat": "Entrena un model de regressió lineal per predir les vendes futures en funció del preu del producte.",
      "solucio": "Resposta: un model de regressió lineal entrenat",
      "solucio_codi_1": "import pandas as pd\nfrom sklearn.linear_model import LinearRegression\nvendes = pd.DataFrame({'Preu': [10, 20, 30], 'Vendes': [100, 200, 300]})\nx = vendes[['Preu']]\ny = vendes['Vendes']\nmodel = LinearRegression().fit(x, y)",
      "solucio_codi_2": null,
      "temps_estimat_minuts": 30,
      "respostes_test": [],
      "pista_1": "Crea un dataframe amb les vendes i els preus dels productes.",
      "pista_2": "Utilitza una biblioteca de Machine Learning per entrenar el model.",
      "imatge_1": null,
      "descripcio_imatge_1": null,
      "imatge_2": null,
      "descripcio_imatge_2": null
    }
  ]
}